Tyrs Reference Guide
====================
:author: Nicolas Paris

[[installation]]
Installation
------------

ArchLinux
~~~~~~~~~

As Tyrs is aviable on AUR, the installation is the easiest way. Just use
'Yaourt' or any AUR-helpers, and grab a copy from the user repository

[source,bash]
yaourt -S tyrs

From source
~~~~~~~~~~~

Dependency
^^^^^^^^^^

Tyrs requires some dependencies

* Python 2
* link:http://code.google.com/p/python-twitter/[python-twitter]
* link:https://github.com/simplegeo/python-oauth2[python-oauth2]

The installation depends of the distribution use, with debian or ubuntu it will be
[source,bash]
apt-get install python-twitter python-oauth2

.Issue with Ubuntu 11.04
[IMPORTANT]
================================
An issue was found with Ubuntu 11.04 and the current python-twitter package,
this wasn't fixed yet, but can work fine, if you get the last library aviable,
as follow in a console:
[source,bash]
apt-get remove python-twitter
wget http://python-twitter.googlecode.com/files/python-twitter-0.8.2.tar.gz
tar xvf python-twitter-0.8.2.tar.gz && cd python-twitter-0.8.2
python setup.py build
sudo python setup.py install

=================================

Installation
^^^^^^^^^^^^

There is two way to get Tyrs installed:

* With _setup.py_, this allow a clean install, like with the autotools for C
programs (you surely know, `configure', `make', `make install')
* Just lauch the main file like a python script will work fine as well

We will go throught both way, I recommends to use the first solution

First, get the last tarball (curently, the last one is the {revision}) +
http://src.nicosphere.net/tyrs/tyrs-{revision}.tar.gz

[source,bash]
tar xvf tyrs-0.1.3.tar.gz
cd tyrs

.With setup.py

python setup.py build
sudo python setup.py install

Those commands decompress the tarball, go to the repertory, prepare the
installation (you can checks files that will be install here), and then install
it, note that _the last command need to be done as_ *root*. And that's all, just
run Tyrs with a simple :

[source,bash]
tyrs

.Without setup.py

Well, you just need to lauch it, the main entry of the script is 'tyrs/tyrs.py'
so you need to call it with python like this:

[source,bash]
python tyrs/tyrs.py

Github
~~~~~~

The development of Tyrs is based at link:https://github.com/Nic0/tyrs[Github],
you can easely get the lastest development version.

[source,bash]
git clone git://github.com/Nic0/tyrs.git

You may follow the same installation steps seen above to get this version work.

.Arch Linux
[TIP]
=================================
A package is aviable from AUR to retrieve the last verion from github.
[source,bash]
yaourt -S tyrs-git

=================================

Usage
-----

Console arguments
-----------------

[[configuration]]
Configuration
-------------

Introduction
~~~~~~~~~~~~

Tyrs allow you some configurations, let's see the way it's works.

It's base on the 'ConfigParser' core module from python, and it's a very
readable and easy to get through syntax. All the configuration is based on this
schema:

[source,conf]
------------
[section1]
param1 = string
param2 = 42
[section2]
other_param = otherValue
...
------------

So far, there are only three sections for the configuration, they will be explain in details
in this chapter. But a quick reminder:

* *colors*: Customisation of colors.
* *keybinding*: Customisation of keys shortcuts.
* *params*: Some other params.

NOTE: All sections and parameters are lower case, for params composed with two
words, they are separate with an underscore `'_'' (no camelCase).

Configuration file
~~~~~~~~~~~~~~~~~~

The configuration file is located in '~/.config/tyrs/tyrs.cfg'.
You may handle several configuration file, as for the account, with an
argument when you start Tyrs. The argument will append to the filename of the
configuration.

.Custom config file
[source,bash]
$ tyrs -c foo

This will read the configuration from the '~/.config/tyrs/tyrs.cfg.foo'.

CAUTION: You don't need to pass as argument the full filename, as it will read from
some 'tyrs.cfg.tyrs.cfg.foo' file if you do so.

Colors
~~~~~~

Values possible
^^^^^^^^^^^^^^^

The possibles values are restricted with curse mode, here a list of aviable
values.

.List of values possible
[width="25%"]
|==================
| Value | Color
| 0     | Black
| 1     | Red
| 2     | Green
| 3     | Yellow
| 4     | Blue
| 5     | Magenta
| 6     | Cyan
| 7     | White
|==================

Overview
^^^^^^^^

This allow the colors customisation, here are display as a configuration file
all parameters possible, with there defaults values

[source,conf]
----------------
[colors]
highlight   = 1
header      = 6
hashtag     = 3
attag       = 2
text        = 7
warning_msg = 1
info_msg    = 2
----------------

Bold font
^^^^^^^^^

You may activate bold with every item of the colors parameters, we activate
them with one parameter, containing the list of elements to activate bold. +
Let's take an exemple, we wan't activate bold for highlight, warning_msg and
header. We simply do:

[source,conf]
---------------
[colors]
bold = highlight warning_msg header
---------------

That's all you need!

[NOTE]
=================
* You need to leave a space between each one, otherwise it won't work.
* This works as well with RGB colors.
=================

Listing
^^^^^^^

highlight::
* Description: this will highlight when your pseudo is display in the tweet,
for exemple, a tweet « blabla @you blabla », @you will be in a different colors.
* Default: 1 (red)

header::
* Description: Corresponding to the first line of a tweet, and display
informations such as user name of the tweeter, hours information, retweets
information.
* Default: 6 (cyan)

hashtag::
* Description: This will highlight the hashtag `#` word, usefull to follow some
specific subjects, like _#Tyrs_.
* Default: 3 (yellow)

attag::
* Description: This will highlight when a name is followed by a `at' tag like
_@nic0sphere_.
* Default: 2 (green)

warning_msg::
* Description: When something goes wrong, or unexpected, a warning message is
displayed on the top left of the console, and let you know what's happen.
* Exemples: `Couldn\'t retreive tweets', `Couldn\'t send tweet'...
* Default: 1 (red)

info_msg::
* Description: When an action is successful, or just an information, Tyrs let
you know, exactly as warning_msg.
* Exemples: `Updating timeline', `Tweet send successfully'...
* Default: 2 (green)

text::
* Description: This is all the basic text, such as tweets (without highlight),
inputs in the tweet edit box.
* Default: 7 (white)

bold::
* Description: Activate bold, check above for more information.

Configuration 256 Colors
~~~~~~~~~~~~~~~~~~~~~~~~

The idea is to redifine a color to another one from 256 colors. For exemple,
the green one is not the one we want, we may change it for a lighter one. +
As 256 colors is not support by every terminals, the defaults values is to set
them off.

[IMPORTANT]
=====================
The format used, is a RGB code, this meen it have to be define with three
numbers from 0 to 1000. You *must* leave spaces between numbers in the
configuration file, for exemple:
[source,conf]
color_set3 = 300 400 500

====================

color_set0::
Redefine the Black.
color_set1::
Redefine the Red.
color_set2::
Redefine the Green.
color_set3::
Redefine the Yellow.
color_set4::
Redefine the Blue.
color_set5::
Redefine the Magenta.
color_set6::
Redefine the Cyan.
color_set7::
Redefine the White.

[IMPORTANT]
If you turn off one of them, for exemple you redefine some green, and change
your mind after to go back on the default green, this may take effect only if
you restart your terminal, otherwise, it will stay on the last color defined. +
You don't need to restart your terminal if you just change the color setup with
another one, it will take effect immediatly after restart Tyrs.


Keys Binding
~~~~~~~~~~~~

Overview
^^^^^^^^

This allow you to change keys shortcuts to your needs, here are display as a
configuration file all params possible.

[source,conf]
--------------
[keys]
up                = k
down              = j
quit              = q
tweet             = t
clear             = c
retweet           = r
retweet_and_edit  = R
update            = u
follow_selected   = f
unfollow_selected = l
follow            = F
unfollow          = L
openurl           = o
home              = h
mentions          = m
reply             = M
getDM             = d
sendDM            = D
search            = s
---------------

Control keys support
^^^^^^^^^^^^^^^^^^^^^

You may wish activate some control keys (ctrl+something) in the configuration
file, for exemple, remap your reply with a ctrl-r. It is possible as following:

[source,conf]
---------------
[keys]
reply  = ^R
---------------

CAUTION: The letter followed by '^' *must* be upper case, as it's a
conventionnal things. this mean you can't have a ctrl-r and ctrl-R, you will
have the ctrl-r by putting '^R' in your configuration file.

Listing
^^^^^^^

up::
* Description: Navigation, Moves up in the timeline.
* Alternative: Up arrow
* Default: *k*

down::
* Description: Navigation, moves down in the timeline.
* Alternative: Down arrow
* Default: *j*

quit::
* Description: Leave Tyrs, and returning to a normal life. 
* Alternative: ESC (escape)
* Default: *q*

tweet::
* Description: Open an input box to write your tweet.
* Default: *t*

clear::
* Description: Clear the timeline and live only the last tweet.
* Default: *c*

retweet::
* Description: Retweet the current tweet.
* Default: *r*

retweet_and_edit::
* Description: This allow you to add some comment to a retweet, it will display like "RT user_name: his_tweet<editable_part>".
* Default: *R*

[NOTE]
This kind of retweet is not realy a retweet, it more like a normal tweet but, with the content of the original tweet with the username update.

home::
* Description: Go back to your home timeline.
* Default: *h*

mentions::
* Description: Show you all tweets that contain @you_pseudo, meaning if someone
that you are not following put your @name in a tweet, you will see it. You may
leave this timeline just using 'h' (home) to go back on your home timeline.
* Default: *m*

reply::
* Description: Reply to the current tweet, open an edit box, with the name of the current tweet on. It will be show as a response to the current tweet selected.
* Defaurt *M*

update::
* Description: Force the update of you timeline.
* Default: *u*

follow_selected::
* Description: Follow the current tweet, this only make sense for the case of
retweets, as you already follow the others, but if you follow a selected tweet,
you will follow the original tweeter one.
* Default: *f*

unfollow_selected::
* Description: Unfollow (leave) the personne who tweets (or retweets) the current
tweet.
* Default: *l*

follow::
* Description: Follow someone, but the difference with `follow_selected' is
that you will have a small input box, and can enter someone to follow.
* Default: *F*

unfollow:: 
* Description: Unfollow someone, display an input box to enter the name.
* Default: *L*

[NOTE]
You may enter the name to follow with or without the '@', so it's quicker to do
without.

openurl::
* Description: will open the link in the select tweet.
* Default: *o*

getDM::
* Description: Retrieve your direct messages
* Default: *d*

sendDM::
* Description: Send a direct message, Tyrs will propose you to send a direct message to the personne display on the current tweet, but you may change, or just validate, and then, write your message.
* Default: *D*

search::
* Description: Return a list of tweets that contain the word of your research, a box will appeare to let you enter the word of your research
* Default: *s*

Parameters
~~~~~~~~~~

Overview
^^^^^^^^

[source,conf]
-------------------
[params]
refresh          = 10
tweet_border     = 1
relative_time    = 0
retweet_by       = 1
openurl_command  = firefox %s
transparency     = 1
-------------------

Listing
^^^^^^^

refresh::
* Description: Define the frequency that the timeline will be
refresh, meaning that Tyrs will try to retreive some new tweets.
* Values: Any positive value.
* Unit: Minute
* Default: 10

tweet_border::
* Description: Display some border on every tweets
* Values: 0 or 1
* Default: 1

relative_time::
* Description: If set to 1, this will display the time of each tweets like `xx
minutes ago', otherwise, will display a more classic format like `HH:MM'.
* Values: 0 or 1
* Default: 0

retweet_by::
* Description: Normally, if a tweet is retweet, the header will be like
`tweeter (some time ago) RT by retweeter', with name of each one, if you find
it to verbose, set to 0 will only display the retweeter.
* Values: 0 or 1
* Default: 1

openurl_command::
* Description: Let you to chose your favorite navigator for opening urls, note
the %s *Required* that corresponding to the url that will be open
* Values: any values that will open a web browser
* Default: firefox %s
